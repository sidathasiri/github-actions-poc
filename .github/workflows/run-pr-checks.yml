name: pr-checks
run-name: ${{ github.actor }} is running pr checks
on:
  push:
    branches:
      - 'master'
jobs:
  build:
    runs-on: ubuntu-latest
    environment: 
      name: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Make changes and push docs branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Get the last merged PR number
          last_pr_number=$(gh pr list --state merged --json number --jq '.[0].number')
          if [ -z "$last_pr_number" ]; then
            echo "No merged PRs found. Exiting."
            exit 1
          fi

          new_branch="pr-$last_pr_number-docs-update"

          # Export the new branch name for later steps
          echo "new_branch=$new_branch" >> $GITHUB_ENV

          # Fetch all remote branches so we can check if the new branch exists
          git fetch origin

          if git ls-remote --exit-code --heads origin "$new_branch"; then
            echo "Branch '$new_branch' exists on remote. Checking it out."
            git checkout -B "$new_branch" "origin/$new_branch"
          else
            echo "Branch '$new_branch' does not exist. Creating new branch."
            git checkout -b "$new_branch"
          fi

          # Make changes
          echo "Random change: $RANDOM" >> random-change.txt

          git add .
          git commit -m "Automated changes" || echo "No changes to commit."
          git push origin "$new_branch"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR for docs branch
        run: |
          existing_pr=$(gh pr list --head "$new_branch" --base master --json number --jq '.[0].number')
          if [ -z "$existing_pr" ]; then
            gh pr create \
              --head "$new_branch" \
              --base master \
              --title "Automated Documentation Update for branch $new_branch" \
              --body "This PR updates the documentation based on the latest changes in branch \`$new_branch\`. It includes automated updates to ensure the documentation remains up-to-date." \
              --assignee "${{ github.actor }}"
          else
            echo "Pull request already exists: #$existing_pr. Skipping creation."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}